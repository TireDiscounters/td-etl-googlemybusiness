import java.time.LocalDate
import java.time.format.DateTimeFormatter

pipeline {
    agent any
    tools { 
        maven 'Maven 3.6.3' 
        jdk 'jdk8' 
    }
    parameters { 
        choice(name: 'PROFILE', choices: ['dev', 'qa', 'prod'], description: 'This determines whether this is a run job or a build job')
        string(name: 'DAYS', defaultValue: '7', description: 'Each ETL job can have a days value specified. This will grab data from the past DAYS days')
        string(name: 'FIRST_DAY', defaultValue: 'NULL', description: 'Each ETL job can have a date range specified. This will grab data between FIRST_DAY and LAST_DAY')
        string(name: 'LAST_DAY', defaultValue: 'NULL', description: 'Each ETL job can have a date range specified. This will grab data between FIRST_DAY and LAST_DAY')
        string(name: 'ACCOUNT_NAME', defaultValue: 'NULL', description: 'ETL can be ran for Retail or Glass locations')
        string(name: 'ADDITIONAL_PARAMS', defaultValue: 'NULL', description: 'Additional parameters to add to the execution of the ETL jobs.') 

    }
    environment {
        NEXUS_API = 'https://nexus.tirediscountersdirect.com/nexus/service/rest/v1'
        ARTIFACT = 'td-etl-google-my-business'
        VERSION = '1.0.6'
    }
    stages {
        stage('Download ETL JAR') {
            steps {
                sh "curl -X GET --header 'Accept: application/json' '${NEXUS_API}/search/assets/download?sort=version&repository=${getMavenRepo(params.PROFILE)}&maven.groupId=com.tirediscounters&maven.artifactId=${ARTIFACT}&maven.baseVersion=${addPackageSuffix(VERSION, params.PROFILE)}&maven.extension=jar' -L -o ${ARTIFACT}.jar"
            }
        }
        stage('Run ETL') {
            steps {
                configFileProvider(
                    [configFile(fileId: '79d7480d-2378-4fe9-a767-b566fc6d90f8', variable: 'ENCRYPTION_KEY_FILE')]) {

                    sh "java -jar ${ARTIFACT}.jar --spring.profiles.active=${PROFILE} --key.file=${env.ENCRYPTION_KEY_FILE} --secretkey.file.path=${env.ENCRYPTION_KEY_FILE} ${addAdditionalParams(params.DAYS, params.FIRST_DAY, params.LAST_DAY, params.ACCOUNT_NAME, params.ADDITIONAL_PARAMS)}"
                }
            }
        }
    }
}

def getMavenRepo(String profile) {
    return ['qa', 'prod'].contains(profile)  ? 'maven-releases' : 'maven-snapshots'
}

def getPackageSuffix(Boolean isProd) {
    return isProd ? '' : '-SNAPSHOT'
}

def addPackageSuffix(String version, String profile) {
    return version + getPackageSuffix(['qa', 'prod'].contains(profile))
}

def addAdditionalParams(String days, String firstDay, String lastDay, String accountName, String additionalParams) {
    String dateParams = days == 'NULL' ? "firstDay=${firstDay} lastDay=${lastDay}" : "days=${days}"
    String accountParams = accountName != 'NULL' ? "accountName=${accountName}" : ""
    additionalParams = additionalParams != 'NULL' ? additionalParams : ' '
    return additionalParams + ' ' + dateParams + ' ' + accountParams + ' '
}